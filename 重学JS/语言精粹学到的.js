// 深刻理解了小时候经常说的好记性不如烂笔头

// 先随时记录下糟粕
 // 1、let a; typeof a === 'undefined'; typeof b === 'undefined' 对于未声明的变量，typeof 由于有容错机制，会和未赋值的变量一样返回
 // undefined 这样无法区分出来，如果后者能返回 'undeclared' 就能明了.但是呢，有了这种防范机制，在日常开发中，如果进行polyfill,那用typeof
 // 先检查是否存在，再补充当前环境缺失的功能。
 // 比如 if (typeof Promise !== 'undefined') {....}
 

// 注释
// 多行注释也需要用 '//' 因为 /*  let reg = /\*/g  */ 这种情况会导致后面的没注释
// 以前觉得2种都可以 没细究。

// {} 代码块，在ES6之前 代码块内部定义的变量会在上一层也能获取，之后的话，通过let const 只会在内部作用域生效。
// 引申到词法作用域，与闭包。

// 为什么对象属性中带有- 的键必须用引号包裹，因为在JS中 这种标识符是不合法的，而下划线是合法的，比如a_b


